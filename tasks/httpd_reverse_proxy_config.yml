---
- name: Copy {{ httpd_package_name }} ports
  template:
    src: "ports.conf"
    dest: "{{ httpd_config_dir }}/../"
  vars:
    repos:  >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_docker_proxy | map('combine', {"format": "docker", "type": "proxy"}) | list)
            +
            (nexus_repos_docker_hosted | map('combine', {"format": "docker", "type": "hosted"}) | list)
            +
            (nexus_repos_docker_group | map('combine', {"format": "docker", "type": "group"}) | list)
          }}
  notify:
    - httpd-service-reload
    - wait-for-httpd

- name: Copy {{ httpd_package_name }} vhost
  template:
    src: "nexus-vhost.conf"
    dest: "{{ httpd_config_dir }}"
  vars:
    repos:  >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_docker_proxy | map('combine', {"format": "docker", "type": "proxy"}) | list)
            +
            (nexus_repos_docker_hosted | map('combine', {"format": "docker", "type": "hosted"}) | list)
            +
            (nexus_repos_docker_group | map('combine', {"format": "docker", "type": "group"}) | list)
          }}
  notify:
    - httpd-service-reload
    - wait-for-httpd

- name: Copy SSL certificate and optional chain file
  copy:
    src: "{{ item }}"
    dest: "{{ certificate_file_dest }}"
    mode: 0600
  when: (httpd_copy_ssl_files | bool) and (item | length > 0)
  notify:
    - httpd-service-reload
    - wait-for-httpd
  loop: "{{ [httpd_ssl_certificate_file] + [httpd_ssl_certificate_chain_file | default()] | unique }}"

- name: Copy SSL certificate key file
  copy:
    src: "{{ httpd_ssl_certificate_key_file }}"
    dest: "{{ certificate_key_dest }}"
    mode: 0600
  when: httpd_copy_ssl_files | bool
  notify:
    - httpd-service-reload
    - wait-for-httpd

- name: Setsebool httpd_can_network_connect
  seboolean:
    name: httpd_can_network_connect
    persistent: yes
    state: yes
  when: ansible_selinux.status is defined and ansible_selinux.status == "enabled"

- meta: flush_handlers
